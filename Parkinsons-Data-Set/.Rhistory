pairs(MyData,col=my_cols[MyData$status], lower.panel = NULL)
my_cols <- c("red", "blue")
pairs(MyData,col=my_cols[MyData$status], lower.panel = NULL)
head(iris)
summary(iris)
i = iris
View(i)
View(i)
View(i)
View(i)
names(MyData)
summary(MyData)
pairs(MyData,col=my_cols[MyData$status], lower.panel = NULL)
pairs(MyData,col=c("blue", "red")[MyData$status], lower.panel = NULL)
pairs(MyData,col=c("blue", "red")[MyData[status]], lower.panel = NULL)
pairs(MyData,col=c("blue", "red")[MyData[,18]], lower.panel = NULL)
pairs(MyData,col=c("red", "blue")[MyData[,18]], lower.panel = NULL)
pairs(MyData,col=rainbow(3)[MyData[,18]], asp=1, lower.panel = NULL)
pairs(MyData,col=rainbow(3)[MyData[,18]], lower.panel = NULL)
pairs(MyData$scores[,1:5], col=rainbow(3)[MyData[,18]], asp=1)
pairs(MyData$scores[,1:18], col=rainbow(3)[MyData[,18]], asp=1)
pairs(MyData$status[,1:18], col=rainbow(3)[MyData[,18]], asp=1)
pairs(MyData$scores[,1:1], col=rainbow(3)[MyData[,18]], asp=1)
pairs(MyData$scores[,1:6], col=rainbow(3)[MyData[,18]], asp=1)
pairs(MyData$scores[,1:10], col=rainbow(3)[MyData[,18]], asp=1)
pairs(MyData$scores[,1:18], col=rainbow(3)[MyData[,18]], asp=1)
pairs(MyData$scores[,1:18], col=rainbow(3)[MyData[,18]])
pairs(MyData,col=rainbow(3)[MyData$status], lower.panel = NULL)
pairs(MyData,col=rainbow(3)[MyData$status], lower.panel = NULL)
pairs(MyData,col=rainbow(1)[MyData$status], lower.panel = NULL)
?princomp
pc <- princomp(MyData)
?scalse
?scale
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
parkinson_s <- scale(parkinson_data)
parkinson_s <- scale(parkinson_data[,2:25])
parkinson_s <- scale(parkinson_data[,2:25])
parkinson_s <- scale(parkinson_data[,1:25])
parkinson_s <- scale(parkinson_data[,1:24])
parkinson_s <- scale(parkinson_data[,1:18])
View(parkinson_data)
View(parkinson_data)
parkinson_s <- scale(parkinson_data[,2:14])
parkinson_s <- scale(parkinson_data[,2:18])
parkinson_s <- scale(parkinson_data[,1:24])
parkinson_s <- scale(parkinson_data[,1:18])
parkinson_s <- scale(parkinson_data[,2:18])
parkinson_s <- scale(parkinson_data[,2:24])
parkinson_s <- scale(parkinson_data[,2:24])
parkinson_s <- scale(parkinson_data[,2:25])
parkinson_s <- scale(parkinson_data[,2:24])
pc<-princomp(parkinson_s)
summary(pc)
View(parkinson_s)
pairs(pc$scores[,1:23], col=rainbow(3)[parkinson_data[,18]], asp=1)
pairs(pc$scores[,1:23], col=rainbow(3)[parkinson_data[,18]])
pairs(pc$scores[,1:23], col=rainbow(3)[parkinson_data[,18]])
View(parkinson_data)
pairs(MyData, col=rainbow(3)[MyData[,18]])
pairs(parkinson_data, col=rainbow(3)[parkinson_data[,18]])
pairs(parkinson_data, col=rainbow(2)[parkinson_data[,18]])
?pairs
winedata=read.csv("wine.data.txt",sep=",", header=F)
winedata=read.csv("C:\\Users\\Andrii\\Documents\\tempwine.data.txt",sep=",", header=F)
winedata=read.csv("C://Users//Andrii//Documents//tempwine.data.txt",sep=",", header=F)
winedata=read.csv("C://Users//Andrii//Documents//wine.data.txt",sep=",", header=F)
winedata=read.csv("C:\\Users\\Andrii\\Documents\\wine.data.txt",sep=",", header=F)
winedata=read.csv("C://Users//Andrii//Documents//wine.data.txt",sep=",", header=F)
winedata=read.csv("C://Users//Andrii//Documents//temp//wine.data.txt",sep=",", header=F)
wine_s<-scale(winedata[,2:14])
library(scatterplot3d)
install.packages("scatterplot3d", repos="http://R-Forge.R-project.org")
library(scatterplot3d)
pc<-princomp(wine_s)
summary(pc)
pairs(pc$scores[,1:5], col=rainbow(3)[winedata[,1]], asp=1)
pairs(winedata)
pairs(winedata, col=rainbow(3)[winedata[,1]])
View(winedata)
View(winedata)
pairs(parkinson_data, col=rainbow(3)[parkinson_data[,18]])
pairs(parkinson_data, col=rainbow(3)[parkinson_data[,19]])
pairs(parkinson_data, col=rainbow(3)[parkinson_data[,17]])
pairs(parkinson_data, col=rainbow(3)[parkinson_data[,18]])
parkinson_data$status[parkinson_data$status == 0] <- 2
pairs(parkinson_data, col=rainbow(2)[parkinson_data[,18]])
pairs(parkinson_data, col=с("red", "blue")[parkinson_data[,18]])
pairs(parkinson_data, col=с("red", "blue")[parkinson_data[,18]])
pairs(parkinson_data, col=c("red", "green3", "blue")[parkinson_data[,18]])
)[parkin
pairs(parkinson_data, col=c("red", "blue")[parkinson_data[,18]])
pairs(parkinson_data[,2:24], col=c("red", "blue")[parkinson_data[,18]])
centered_dataset <- scale(parkinson_data[,2:24])
View(centered_dataset)
colMeans(parkinson_data)
col_means = colMeans(parkinson_data[,2:24])
col_means <- colMeans(parkinson_data[,2:24])
View(col_means)
?princomp
pc <- princomp(parkinson_s)
pairs(pc$scale[,1:7], col=c("red", "blue")[parkinson_data[,18]])
summary(pc)
View(winedata)
pairs(pc$scale[,1:7], col=c("red", "blue")[parkinson_data[,18]])
pairs(pc$scale[,1:18], col=c("red", "blue")[parkinson_data[,18]])
pairs(pc$scores[,1:7], col=c("red", "blue")[parkinson_data[,18]])
scatterplot3d(pc$scores[,c(1,2,4)], color=rainbow(3)[winedata[,1]])
scatterplot3d(pc$scores[,c(1,2,3)], color=c("red", "blue", "green")[parkinson_data[,18]])
scatterplot3d(pc$scores[,c(1,3,2)], color=c("red", "blue")[parkinson_data[,18]])
scatterplot3d(pc$scores[,c(3, 2, 1)], color=c("red", "blue")[parkinson_data[,18]])
names(parkinson_data)
summary(parkinson_data)
pairs(parkinson_data[,2:24], col=c("red", "blue")[parkinson_data[,18]])
glm.fit = glm(Status~-name+ MDVP.RAP + NHR + HNR + D2 + Shimmer.DDA, data=parkinson_data, family = binomial)
glm.fit = glm(status~-name+ MDVP.RAP + NHR + HNR + D2 + Shimmer.DDA, data=parkinson_data, family = binomial)
glm.fit = glm(status~-name+ MDVP.RAP + NHR + HNR + D2 + Shimmer.DDA, data=parkinson_data, family=binomial)
glm.fit = glm(status~-name+ MDVP.RAP + NHR + HNR + D2 + Shimmer.DDA, data=parkinson_data, family=binomial())
glm.fit = glm(status~-name+ MDVP.RAP + NHR + HNR + D2 + Shimmer.DDA, data=parkinson_data)
summary(gml.fit)
summary(gll.fit)
summary(glm.fit)
glm.fit = glm(status~.-name, data=parkinson_data)
summary(glm.fit)
glm.probs=predict(glm.fit,type="response")
table(glm.pred,status)
glm.probs=predict(glm.fit,type="response")
glm.probs[1:5]
glm.probs[1:24]
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
glm.fit = glm(status~.-name, data=c_parkinson, family = "binomial")
c_parkinson = parkinson_data[,2:24]
glm.fit = glm(status~.-name, data=c_parkinson, family = "binomial")
glm.fit = glm(status, data=c_parkinson, family = "binomial")
names(c_parkinson)
glm.fit = glm(status, data=c_parkinson, family = "binomial")
summary(c_parkinson)
glm.fit = glm(status, data=c_parkinson, family = "binomial")
parkinson_data$name <- NULL
glm.fit = glm(status, data=parkinson_data, family = "binomial")
glm.fit = glm(status~., data=parkinson_data, family = "binomial")
parkinson_data$name <- NULL
glm.fit = glm(status~., data=parkinson_data, family = "binomial")
summary(parkinson_data)
View(parkinson_data)
glm.fit = glm(status~.-name, data=parkinson_s, family = "binomial")
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
glm.fit = glm(status~., data=parkinson_data, family = "binomial")
glm.fit = glm(status~., data=parkinson_data, family = "binomial")
glm.fit = glm(status~.+MDVP.Fo.Hz.+ MDVP.Fhi.Hz, data=parkinson_data, family = "binomial")
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
glm.fit = glm(status~.-name+MDVP.Fo.Hz.+ MDVP.Fhi.Hz, data=parkinson_data, family = "binomial")
names(parkinson_data)
glm.fit = glm(status~.-name + HNR + PPE, data=parkinson_data, family = "binomial")
summary(glm.fit)
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
summary(glm.fit)
glm.probs=predict(glm.fit,type="response")
glm.probs[1:24]
?ifelse
glm.pred=ifelse(glm.probs>0.9,"Ill","Not ill")
table(glm.pred,status)
mean(glm.pred==status)
names(glm.pred)
summary(glm.pred)
table(glm.pred, parkinson_data$status)
parkinson_data$status[parkinson_data$status == 0] <- 2
glm.pred=ifelse(glm.probs>0.9,"Ill","Not ill")
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
names(parkinson_data)
summary(parkinson_data)
parkinson_s <- scale(parkinson_data[,2:24])
pc<-princomp(parkinson_s)
summary(pc)
parkinson_data$status[parkinson_data$status == 0] <- 2
pairs(parkinson_data[,2:24], col=c("red", "blue")[parkinson_data[,18]])
parkinson_data$name <- NULL
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
names(parkinson_data)
summary(parkinson_data)
parkinson_s <- scale(parkinson_data[,2:24])
pc<-princomp(parkinson_s)
summary(pc)
parkinson_data$status[parkinson_data$status == 0] <- 2
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
parkinson_data$status[parkinson_data$status == 0] <- 2
summary(parkinson_data)
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
glm.probs=predict(glm.fit,type="response")
glm.probs[1:24]
glm.pred=ifelse(glm.probs>0.9,"Ill","Not ill")
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
glm.pred=ifelse(glm.probs>0.5,"Ill","Not ill")
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
glm.pred=ifelse(glm.probs>0.1,"Ill","Not ill")
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
glm.pred=ifelse(glm.probs>0.1,1,0)
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
View(parkinson_data)
split(parkinson_data, sample(rep(1:2, 13)))
?split
?rep
?rep
?sample
?rep
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
train = split(parkinson_data, sample(rep(1:2, 13)))
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
train
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
smp_size <- floor(0.75 * nrow(parkinson_data))
set.seed(123)
train_ind <- sample(seq_len(nrow(parkinson_data)), size = smp_size)
train <- mtcars[train_ind, ]
test <- mtcars[-train_ind, ]
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=parkinson_data)
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
glm.fit=glm(status~.-name, data=parkinson_data, family='binomial')
glm.fit=glm(status~.-name, data=parkinson_data, family='binomial', subset=parkinson_data)
glm.fit=glm(Direction~.-name, data=parkinson_data,family='binomial', subset=train)
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
train = split(parkinson_data, sample(rep(1:2, 13)))
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
train <- mtcars[train_ind, ]
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
?c
train <- subset(training.data.raw,select=c(0:smp_size))
smp_size <- floor(0.75 * nrow(parkinson_data))
train <- subset(parkinson_data,select=c(0:smp_size))
train <- subset(status~.-name,select=c(0:smp_size))
train <- subset(status~.-name,select=c(0:smp_size))
train <- subset(parkinson_data,select=c(0:smp_size))
library(help = "datasets")
indexes = sample(1:nrow(parkinson_data), size=0.2*nrow(parkinson_data))
test = data[indexes,]
train = data[-indexes,]
indexes = sample(1:nrow(parkinson_data), size=0.2*nrow(parkinson_data))
test = parkinson_data[indexes,]
train = parkinson_data[-indexes,]
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial')
length(test)
indexes = sample(1:nrow(parkinson_data), size=0.2*nrow(parkinson_data))
test_list = parkinson_data[indexes,]
test <- data.frame(matrix(unlist(test_list), nrow=length(test_list), byrow=T))
train_list = parkinson_data[indexes,]
train <- data.frame(matrix(unlist(test_list), nrow=length(train_list), byrow=T))
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
typeof(train)
train <- data.frame(matrix(unlist(test_list), nrow=length(train_list), byrow=T))
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=train)
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
indexes = sample(1:nrow(parkinson_data), size=0.2*nrow(parkinson_data))
test_list = parkinson_data[indexes,]
test <- data.frame(matrix(unlist(test_list), nrow=length(test_list), byrow=T))
train_list = parkinson_data[indexes,]
train <- data.frame(matrix(unlist(test_list), nrow=length(train_list), byrow=T))
typeof(train)
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
splitdf <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)/2))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
splits <- splitdf(parkinson_data, seed=808)
str(parkinson_data)
lapply(parkinson_data,nrow)
lapply(parkinson_data,head)
training <- parkinson_data$trainset
testing <- parkinson_data$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
glm.probs=predict(glm.fit,newdata=status[!training,],type="response")
glm.probs=predict(glm.fit,newdata=parkinson_data$status[!training,],type="response")
glm.probs=predict(glm.fit,newdata=parkinson_data[!training,],type="response")
glm.probs=predict(glm.fit,newdata=testing,type="response")
glm.pred=ifelse(glm.probs>0.1,1,0)
names(glm.pred)
summary(glm.pred)
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
parkinson_data <- read.csv(file="C:\\Users\\Andrii\\Documents\\r-project\\R-projects\\Parkinsons-Data-Set\\data\\parkinsons.data", header=TRUE, sep=",")
splits <- splitdf(parkinson_data, seed=808)
source("splitdf.R")
source("splitdf.R")
setwd("~/r-project/R-projects/Parkinsons-Data-Set")
parkinson_data <- read.csv(file="\\data\\parkinsons.data", header=TRUE, sep=",")
parkinson_data <- read.csv(file="data\\parkinsons.data", header=TRUE, sep=",")
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
splits <- splitdf(parkinson_data, seed=808)
source("splitdf.R")
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
View(splitdf.R)
parkinson_data <- read.csv(file="data\\parkinsons.data", header=TRUE, sep=",")
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- parkinson_data$trainset
testing <- parkinson_data$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
glm.probs=predict(glm.fit,newdata=testing,type="respsonse")
glm.probs=predict(glm.fit,newdata=testing,type="response")
glm.pred=ifelse(glm.probs>0.1,1,0)
names(glm.pred)
summary(glm.pred)
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
name(parkinson_data)
names(parkinson_data)
glm.fit=glm(status~MDVP.Fo.Hz+MDVP.Fhi.Hz+MDVP.Flo.Hz.+DFA + RPDE + status+ HNR+ PPE, data=parkinson_data,family='binomial', subset=training)
glm.fit=glm(status~MDVP.Fo.Hz + MDVP.Fhi.Hz + DFA + RPDE + status+ HNR+ PPE, data=parkinson_data,family='binomial', subset=training)
glm.fit=glm(status~ DFA + RPDE + status+ HNR+ PPE + D2 + NHR + spread1 + spread2, data=parkinson_data,family='binomial', subset=training)
glm.fit=glm(status~ DFA + RPDE + status+ HNR+ PPE + D2 + NHR + spread1 + spread2, data=parkinson_data,family='binomial', subset=training)
glm.probs=predict(glm.fit,newdata=Smarket[!train,],type="response")
glm.probs=predict(glm.fit,newdata=testing,type="response")
summary(glm.probs)
glm.pred=ifelse(glm.probs>0.1,1,0)
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
install.packages('MASS')
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
require(MASS)
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
lda.fit=lda(status~.-name,data=parkinson_data, subset="training")
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
lda.fit
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
install.packages('MASS')
install.packages("MASS")
require(MASS)
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
typeof(testing)
typeof(training)
training <- parkinson_data$trainset
testing <- parkinson_data$testset
training <- parkinson_data$trainset
testing <- parkinson_data$testset
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
splits
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
glm.probs=predict(glm.fit,newdata=testing,type="response")
glm.pred=ifelse(glm.probs>0.1,1,0)
table(glm.pred, parkinson_data$status)
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
View(training)
typeof(testing)
typeof(training)
parkinson_data <- read.csv(file="data\\parkinsons.data", header=TRUE, sep=",")
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
typeof(testing)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
str(splits)
lapply(splits,nrow)
lapply(splits,head)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
View(training)
View(training)
parkinson_data <- read.csv(file="data\\parkinsons.data", header=TRUE, sep=",")
parkinson_data$status[parkinson_data$status == 0] <- 2
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
str(splits)
lapply(splits,nrow)
lapply(splits,head)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
parkinson_data <- read.csv(file="data\\parkinsons.data", header=TRUE, sep=",")
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
splits <- splitdf(parkinson_data, seed=808)
splits <- splitdf(parkinson_data, seed=808)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
str(splits)
lapply(splits,nrow)
lapply(splits,head)
training <- splits$trainset
testing <- splits$testset
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=splits$trainset)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
View(training)
parkinson_data <- read.csv(file="data\\parkinsons.data", header=TRUE, sep=",")
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
parkinson_data <- read.csv(file="data\\parkinsons.data", header=TRUE, sep=",")
splitdf <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)/2))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits[1]
testing <- splits[2]
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits[1]
testing <- splits[2]
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial')
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
parkinson_data$status[parkinson_data$status == 0] <- 2
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
parkinson_data <- read.csv(file="data\\parkinsons.data", header=TRUE, sep=",")
glm.fit = glm(status~.-name, data=parkinson_data, family = "binomial")
glm.probs=predict(glm.fit,type="response")
glm.probs[1:24]
glm.pred=ifelse(glm.probs>0.1,1,0)
names(glm.pred)
summary(glm.pred)
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
glm.probs=predict(glm.fit,newdata=testing,type="response")
glm.pred=ifelse(glm.probs>0.1,1,0)
table(glm.pred, parkinson_data$status)
mean(glm.pred == parkinson_data$status)
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
detach("package:MASS", unload=TRUE)
source("splitdf.R")
splits <- splitdf(parkinson_data, seed=808)
training <- splits$trainset
testing <- splits$testset
glm.fit=glm(status~.-name, data=parkinson_data,family='binomial', subset=training)
lda.fit=lda(status~.-name,data=parkinson_data, subset=training)
